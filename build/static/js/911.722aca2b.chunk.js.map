{"version":3,"file":"static/js/911.722aca2b.chunk.js","mappings":"kLAIA,MAoDA,EApDeA,KACb,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAMC,IAAYC,EAAAA,EAAAA,UAAS,KAC3BC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAMC,IAAYJ,EAAAA,EAAAA,UAAS,IAkClC,OACEK,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACFD,EAAAA,EAAAA,MAAA,QAAMG,MAAO,CAACC,OANP,CAEb,GAI4BH,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAOG,KAAK,QAAQC,YAAY,yBAAyBC,MAAOd,EAAOe,SAAWC,GAAIf,EAASe,EAAEC,OAAOH,UACxGL,EAAAA,EAAAA,KAAA,SAAOS,KAAK,WAAWN,KAAK,WAAWC,YAAY,4BAA4BC,MAAOX,EAAUY,SAAWC,GAAIZ,EAAYY,EAAEC,OAAOH,UACpIL,EAAAA,EAAAA,KAAA,UAAQS,KAAK,SAASC,QAtCRH,IACpBA,EAAEI,iBACFC,YAAW,KACTvB,EAAS,SAAS,GAElB,KAEF,MAAMwB,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,SACnD,GAAIJ,GAAcA,EAAWtB,QAAUA,EAAO,CACpB2B,IAAAA,YAAmBxB,EAAUmB,EAAWnB,WAE9DF,EAAS,IACTG,EAAY,IACZE,EAAS,IAAIN,6BACb4B,QAAQC,IAAI7B,IAEZM,EAAS,iCAEb,MACEA,EAAS,iCACX,EAkBkDE,SAAC,aAC7CC,EAAAA,EAAAA,KAAA,UAAQS,KAAK,QAAQC,QAhBfW,KACZ7B,EAAS,IACTG,EAAY,GAAG,EAc2BI,SAAC,YACrCC,EAAAA,EAAAA,KAAA,KAAAD,SAAIH,SAEJ,C","sources":["components/SignIn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport bcrypt from \"bcryptjs\";\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SignIn = () => {\r\n  const navigate = useNavigate();\r\n  const [email,setEmail] = useState(\"\");\r\n  const [password,setPassword] =useState(\"\");\r\n  const [error,setError] = useState(\"\");\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    setTimeout(()=>{\r\n      navigate(\"/users\");\r\n\r\n    },2000);\r\n    \r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    if (storedUser && storedUser.email === email) {\r\n      const isPasswordValid = bcrypt.compareSync(password, storedUser.password);\r\n      if (isPasswordValid) {\r\n        setEmail('');\r\n        setPassword('');\r\n        setError(`\"${email}\" successfully signed in`);\r\n        console.log(email)\r\n      } else {\r\n        setError('Email or password is incorrect');\r\n      }\r\n    } else {\r\n      setError('Email or password is incorrect');\r\n    }\r\n  }\r\n\r\n  const reset = () =>{\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  }\r\n\r\n\r\n  const styles={\r\n     \r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Sign In</h1>\r\n        <form style={{styles}}>\r\n          <input name=\"email\" placeholder='Please enter the email' value={email} onChange={(e)=>setEmail(e.target.value)} />\r\n          <input type='password' name=\"password\" placeholder='Please enter the password' value={password} onChange={(e)=>setPassword(e.target.value)} />\r\n          <button type='submit' onClick={handleSubmit}>Sign In</button>\r\n          <button type='clear' onClick={reset}>Cancel</button>\r\n          <p>{error}</p>\r\n        </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn;"],"names":["SignIn","navigate","useNavigate","email","setEmail","useState","password","setPassword","error","setError","_jsxs","children","_jsx","style","styles","name","placeholder","value","onChange","e","target","type","onClick","preventDefault","setTimeout","storedUser","JSON","parse","localStorage","getItem","bcrypt","console","log","reset"],"sourceRoot":""}